__author__ = "tccontre - Br3akp0int"

import os
import sys
import requests
import json

SAMPLE_LIMIT = 50
MB_INFO_JSON_FILE_NAME = "b.json"
sha256_hashes = []
headers = { 'API-KEY': '' }

def download_mbazaar_file_info(tag, sample_limit):
	data = {
		"query": "get_siginfo",
		"signature": "darkgate",
		"limit": sample_limit}
		
	response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15)
	json_response = response.content.decode("utf-8", "ignore")		
	
	with open(MB_INFO_JSON_FILE_NAME,"a") as f:
		f.write(json_response)
	return

def parse_sha256_and_download():
	with open(MB_INFO_JSON_FILE_NAME,"r") as f:
		json_response = json.load(f)
	
	#sha256_hashes = [item["sha256_hash"] for item in json_response["data"]]
	for item in json_response["data"]:
		if "msi" in item["tags"]:
			sha256_hashes.append(item["sha256_hash"])
	print(sha256_hashes)
	
	data_download = {
		"query": "get_file",
		"sha256_hash":None}
		
	for sha256 in sha256_hashes:
		print("[+] downloading--> {}".format(sha256))
		data_download["sha256_hash"] = sha256
		response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data_download, timeout=15, headers=headers, allow_redirects=True)
		if 'file_not_found' in response.text:
			print("Error: file not found")
		else:
			open(sha256 +'.zip', 'wb').write(response.content)
		

	
	return

def main():
	tag = ["darkgate","msi"]
	#download_mbazaar_file_info(tag, SAMPLE_LIMIT)
	parse_sha256_and_download()
	


	
	return



if __name__ == "__main__":
	main()
